---
- hosts: tag_Owner_Jennysiq
  become: true
  
  tasks:  ####INSTALL DCOKER
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu xenial stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker
    - debug: msg="{{ lookup('env','BUILD_NUMBER') }}"  
             ####INSTALL NGINX 
             
    - name: ensure nginx is at the latest version
      apt: name=nginx state=latest
      become: yes
    - name: start nginx

      service:
          name: nginx
          state: started
      become: yes

    - name: copy the nginx config file and restart nginx
      copy:
        src: nginx.conf
        dest: /etc/nginx/nginx.conf
      become: yes

    - name: restart nginx
      service:
        name: nginx
        state: restarted
      become: yes
      
    - name: copy app to destination EC2
      copy:
        src: .
        dest: /home/ubuntu/myapp/
      become: yes
      
#    - name: install docker-compose
#      apt: update_cache=yes name=docker-compose state=latest
#      become: yes

#    - name: Install requirements.txt
#      pip:
#        requirements: /home/ubuntu/myapp/requirements.txt
       
#    - name: Install library_mysql
#    apt: update_cache=yes name=libmysqlclient-dev
       
#   - name: Run flask
#      shell: python3 /home/ubuntu/myapp/app.py
       
#    - name: Run container from myhub
#        shell: docker pull jennysiq/myflask_project:${BUILD_ID}
#        shell: docker run jennysiq/myflask_project:${BUILD_ID}
#       
#    - name: Pull mysql docker
#        shell: docker run --name mysql -v /db:/docker-entrypoint-initdb.d -p 3306 -e MYSQL_ROOT_PASSWORD=Hardcore123 -e MYSQL_DATABASE=myflaskapp -d mysql:latest

    - name: Pull docker image
      docker_image:
        name: jennysiq/myflask_project:${BUILD_ID}
        source: pull
         
    - name: Create Mysql container
      docker_container:
        name: mysql
        image: mysql
        state: started
        recreate: yes
        env:
          MYSQL_ROOT_PASSWORD: "{{ mysql_root_pass }}"
        exposed_ports:
          - 3306
        volumes:
          - db:/docker-entrypoint-initdb.d/ro

      
 
      

